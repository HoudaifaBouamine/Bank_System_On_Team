<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>